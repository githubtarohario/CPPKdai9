//******************************************************************************
//
//
//		妖精クラス
//
//
//******************************************************************************

#include <iostream>
using namespace std;

#include "Fairy.h"

//******************************************************************************
//
//		Lightクラス(派生クラス）
//
//******************************************************************************

Light::Light()
{
	cout << "Lightクラスのコンストラクタが呼び出されました！" << endl;
}

Light::~Light()
{
	cout << "Lightクラスのデストラクタが呼び出されました！" << endl;
}

void Light::intro()
{
	cout << "わたしは光の妖精！" << endl;
	cout << "この者に祝福を！" << endl;
}

//******************************************************************************
//
//		Darknessクラス(派生クラス）
//
//******************************************************************************

Darkness::Darkness()
{
	cout << "Darknessクラスのコンストラクタが呼び出されました！" << endl;
}

Darkness::~Darkness()
{
	cout << "Darknessクラスのデストラクタが呼び出されました！" << endl;
}

void Darkness::intro()
{
	cout << "わたしは闇の妖精だ！" << endl;
	cout << "闇の力を思い知れ！" << endl;
}

//******************************************************************************
//
//		Fireクラス（派生クラス）
//
//******************************************************************************

Fire::Fire()
{
	cout << "Fireクラスのコンストラクタが呼び出されました！" << endl;
}

Fire::~Fire()
{
	cout << "Fireクラスのデストラクタが呼び出されました！" << endl;
}

void Fire::intro()
{
	cout << "わたしは炎の妖精さ！" << endl;
	cout << "炎の力は気まぐれなのさ！" << endl;
}

//******************************************************************************
//
//		Fairyクラス（基底クラス）
//      2024-11-09作成した
//******************************************************************************

Fairy::Fairy()
{
	cout << "Fairyクラスのコンストラクタが呼び出されました！」" << endl;
}
//デストラクター（重要！！）
Fairy::~Fairy()
{
	cout << "Fairyクラスのデストラクタが呼び出されました！」" << endl;
}

void Fairy::intro()
{
	cout << "わたしは普通の妖精よ！」「すべての妖精の源よ！" << endl;
}

//----------------------
// 木の妖精
//-----------------------
void Tree::intro()
{
	cout << "わたしは木の妖精さ！" << endl;
	cout << "木の力は適当！" << endl;
}
Tree::Tree()
{
	cout << "Treeのコンストラクター生成" << endl;
}
Tree::~Tree()
{
	cout << "Treeのデストラクター生成" << endl;
}